Continuation......# Flipkart
DAY 18..........

7.City With the Smallest Number of Neighbors at a Threshold Distance
8.Closest Primes in Range
9.Top K frequent Words

class Pair{
    String str;
    int freq;
    public Pair(String str,int freq){
        this.str=str;
        this.freq=freq;
    }
    public String getString(){
        return str;
    }
}
class Solution {
    public List<String> topKFrequent(String[] words, int k) {
        Map<String,Integer> m=new HashMap<>();
        for(int i=0;i<words.length;++i){
            m.put(words[i],m.getOrDefault(words[i],0)+1);
        }
        Queue<Pair> pq=new PriorityQueue<>(new Comparator<Pair>(){
            @Override
            public int compare(Pair o1,Pair o2){
                if(o1.freq>o2.freq) return 1;
                else if(o1.freq<o2.freq) return -1;
                if((o1.getString()).compareTo(o2.getString())<0) return 1;
                else if((o1.getString()).compareTo(o2.getString())>=1) return -1;
                return 0;
            }
        });
        for(String key:m.keySet()){
            pq.add(new Pair(key,m.get(key)));
            if(pq.size()>k) pq.poll();
        }
        int j=0;
        String[] arr=new String[k];
        while(pq.size()>0){
            arr[j++]=pq.peek().str;
            pq.poll();
        }
        List<String> res=new ArrayList<>();
        for(int i=k-1;i>=0;--i){
            res.add(arr[i]);
        }
        return res;
    }
}
